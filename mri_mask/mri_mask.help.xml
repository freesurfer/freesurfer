<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE help [
<!ENTITY lt "#38;#60;">
<!ENTITY gt "&#62;">
<!ENTITY amp "&#38;#38;">
<!ELEMENT help (name , synopsis , description , arguments+ , outputs* , example* , bugs* , reporting* , see-also*)*>
<!ELEMENT name (#PCDATA)>
<!ELEMENT synopsis (#PCDATA)>
<!ELEMENT description (#PCDATA)>
<!ELEMENT arguments (positional* , required-flagged* , optional-flagged*)*>
<!ELEMENT positional (intro* , argument* , explanation*)*>
<!ELEMENT required-flagged (intro* , argument* , explanation*)*>
<!ELEMENT optional-flagged (intro* , argument* , explanation*)*>
<!ELEMENT intro (#PCDATA)>
<!ELEMENT argument (#PCDATA)>
<!ELEMENT explanation (#PCDATA)>
<!ELEMENT outputs (output* , explanation*)>
<!ELEMENT output (#PCDATA)>
<!ELEMENT example (#PCDATA)>
<!ELEMENT bugs (#PCDATA)>
<!ELEMENT reporting (#PCDATA)>
<!ELEMENT see-also (#PCDATA)>
]>

<help>
	<name>mri_mask - applies a mask volume (typically skull stripped)</name>
	<synopsis>mri_mask [options] &lt;in vol&gt; &lt;mask vol&gt; &lt;out vol&gt;</synopsis>
	<description>This program applies a mask volume (typically skull stripped).</description>
  <arguments>
    <positional>
      <argument>in vol</argument>
      <explanation>input volume</explanation>
      <argument>mask vol</argument>
      <explanation>mask volume</explanation>
    </positional>
    <optional-flagged>
      <argument>-xform %s</argument>
      <explanation>apply M3Z/LTA to transform mask to space of input volume (can be identity.nofile, will be inverted if needed)</explanation>
      <argument>-lta_src %s</argument>
      <explanation>source volume for -xform (if not available from the xform file)</explanation>
      <argument>-lta_dst %s</argument>
      <explanation>target volume for -xform (if not available from the xform file)</explanation>
      <argument>-T threshold</argument>
      <explanation>threshold mask volume at threshold (i.e., all values &lt;= T considered as zero)</explanation>
      <argument>-samseg</argument>
      <explanation>assume mask is a samseg segmentation and mask all non-brain labels</explanation>
      <argument>-bb npad</argument>
      <explanation>Create and extract data from a bounding box around the mask. The bounding box is expanded by npad voxels in each direction. npad should be at least 1 to avoid clipping</explanation>
      <argument>-bbm npad1 npad2 npad3</argument>
      <explanation>Create and extract data from a bounding box around the mask. The bounding box is expanded by npad[X] voxels in each direction. npad should be at least 1 to avoid clipping</explanation>
      <argument>-bbmm npad1a npad1b npad2a npad2b npad3a npad3b</argument>
      <explanation>Create and extract data from a bounding box around the mask. The bounding box is expanded by npad[X] voxels in each direction. npad should be at least 1 to avoid clipping</explanation>
      <argument>-abs</argument>
      <explanation>take abs() before applying threshold</explanation>
      <argument>-invert, -no-invert</argument>
      <explanation>Invert mask (or turn off inversion)</explanation>
      <argument>-rh</argument>
      <explanation>set mask in rh labels to 1 (assumes input mask is an aseg)</explanation>
      <argument>-lh</argument>
      <explanation>set mask in lh labels to 1 (assumes input mask is an aseg)</explanation>
      <argument>-dilate N</argument>
      <explanation>dilate mask N times before applying</explanation>
      <argument>-no_cerebellum</argument>
      <explanation>remove cerebellum from aseg mask (assumes input mask is an aseg)</explanation>
      <argument>-oval #</argument>
      <explanation>use oval as output instead of 0</explanation>
      <argument>-transfer #</argument>
      <explanation>transfer only voxel value # from mask to out</explanation>
      <argument>-keep_mask_deletion_edits</argument>
      <explanation>transfer voxel-deletion edits (voxels=1) from mask to out vol</explanation>
    </optional-flagged>
  </arguments>
  <outputs>
    <output>out vol</output>
    <explanation>output volume</explanation>
  </outputs>
  <reporting>Report bugs to &lt;analysis-bugs@nmr.mgh.harvard.edu&gt;</reporting>
</help>

